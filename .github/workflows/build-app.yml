name: Create Release

on:
  push:
    branches:
      - main

jobs:
  pyinstaller-build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements_windows.txt', 'requirements_linux.txt', 'requirements_macos.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip
        if [ "${{ runner.os }}" = "Linux" ]; then
          pip install -r requirements_linux.txt
        elif [ "${{ runner.os }}" = "macOS" ]; then
          pip install -r requirements_macos.txt
        else
          pip install -r requirements_windows.txt
        fi
        
    - name: Build executable with PyInstaller on Linux and Windows
      if: ${{ runner.os == 'Windows' || runner.os == 'Linux' }}
      shell: bash
      run: |
        if [ ! -d "build_output" ]; then
        mkdir build_output
        fi
        cp -r src/* build_output/
        cd build_output
        pip install pyinstaller==6.11.1
        pyinstaller --onefile --windowed --clean --name "FastAudioMerge" application.py

    - name: Build executable with PyInstaller for macOS (x86_64)
      if: runner.os == 'macOS'
      shell: bash
      run: |
        if [ ! -d "build_output" ]; then
        mkdir build_output
        fi
        cp -r src/* build_output/
        cd build_output
        pip uninstall -y pyqt5
        arch -x86_64 pip install pyqt5
        pip install pyinstaller==6.11.1
        arch -x86_64 pyinstaller --onefile --windowed --name "FastAudioMerge-x86_64" application.py

    - name: Build executable with PyInstaller for macOS (arm64)
      if: runner.os == 'macOS'
      shell: bash
      run: |
        if [ ! -d "build_output" ]; then
        mkdir build_output
        fi
        cp -r src/* build_output/
        cd build_output
        pip uninstall -y pyqt5
        arch -arm64 pip install pyqt5
        pip install pyinstaller==6.11.1
        arch -arm64 pyinstaller --onefile --windowed --name "FastAudioMerge-arm64" application.py

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: FastAudioMerge-${{ matrix.os }}
        path: build_output/dist/FastAudioMerge*
