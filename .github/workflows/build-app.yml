name: Create release

on:
  push:
    branches:
      - main

jobs:
  pyinstaller-build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install platform-specific dependencies for PyQt5
      run: |
        if [ "${{ runner.os }}" == "Windows" ]; then
          pip install PyQt5==5.15.4 PyQt5-Qt5==5.15.4
        elif [ "${{ runner.os }}" == "macOS" ]; then
          pip install PyQt5==5.15.11 PyQt5-Qt5==5.15.11
        elif [ "${{ runner.os }}" == "Linux" ]; then
          pip install PyQt5==5.15.4 PyQt5-Qt5==5.15.4
        fi

    - name: Build executable with PyInstaller
      shell: bash
      run: |
        mkdir build_output
        cp -r src/* build_output/

        if [ "$RUNNER_OS" = "Windows" ]; then
          ADD_DATA="thread_merge.py;."
        else
          ADD_DATA="thread_merge.py:."
        fi

        cd build_output
        pip install pyinstaller==6.11.1
        pyinstaller --onefile --name "FastAudioMerge" --windowed --noconsole \
          --add-data "$ADD_DATA" --hidden-import ffmpeg application.py

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: FastAudioMerge-${{ matrix.os }}
        path: build_output/dist/FastAudioMerge*
